{"version":3,"sources":["components/MapView.js","components/ContactUs.js"],"names":["mapContainerStyle","height","width","defaultProps","center","lat","lng","zoom","options","desableDefaultUI","zoomControl","MapView","useLoadScript","googleMapsApiKey","isLoaded","loadError","mapRef","useRef","onMapLoad","useCallback","map","current","Grid","container","direction","justifyContent","item","onLoad","position","ContactUs","useState","address","email","phone","fax","officer","ipoData","setipoData","useEffect","formik","useFormik","initialValues","name","message","validationSchema","Yup","required","matches","phoneRegExp","min","max","onSubmit","values","alert","JSON","stringify","style","Container","maxWidth","sx","my","xs","Divider","Typography","variant","textTransform","sm","md","px","mt","Stack","alignItems","spacing","TextField","fullWidth","color","id","label","value","InputProps","startAdornment","InputAdornment","LocationOn","readOnly","Email","LocalPhone","Fax","Person","error","touched","errors","helperText","getFieldProps","multiline","rows","Button","onClick","handleSubmit"],"mappings":"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","file":"static/js/47.aafe48d8.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\n\nimport { Grid } from \"@mui/material\";\nimport { useRef } from \"react\";\n\nconst mapContainerStyle = {\n  height: \"250px\",\n  width: \"100%\",\n};\n\nconst defaultProps = {\n  center: {\n    lat: 6.06125,\n    lng: 80.56805,\n  },\n\n  zoom: 11,\n};\n\nconst options = {\n  desableDefaultUI: true,\n  zoomControl: true,\n};\n\n\n\nexport default function MapView() {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyB8kU10whTTqpO0IALsXuoDhpNl_fRucYU\",\n  });\n\n  const mapRef = useRef();\n\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  if (loadError) return \"Error loading map\";\n  if (!isLoaded) return \"Loading map\";\n\n  return (\n    <div>\n      <Grid container direction=\"column\" justifyContent=\"center\">\n        <Grid item>\n          <GoogleMap\n            mapContainerStyle={mapContainerStyle}\n            zoom={defaultProps.zoom}\n            center={defaultProps.center}\n            options={options}\n            onLoad={onMapLoad}\n          >\n            <Marker\n              position={{\n                lat: defaultProps.center.lat,\n                lng: defaultProps.center.lng,\n              }}\n            />\n          </GoogleMap>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Grid,\n  TextField,\n  Stack,\n  InputAdornment,\n  Typography,\n  Button,\n  Divider,\n} from \"@mui/material\";\nimport {\n  LocationOn,\n  LocalPhone,\n  Fax,\n  Person,\n  Email,\n} from \"@mui/icons-material\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport MapView from \"./MapView\";\nimport { phoneRegExp } from \"../config/pattern\";\n\nconst ContactUs = () => {\n  const [ipoData, setipoData] = useState({\n    address: \"81100 , Matara-Kamburupitiya Rd , Mapalana\",\n    email: \"ipo@agri.ruh.ac.lk\",\n    phone: \"+94 412 292 386\",\n    fax: \"+94 412 292 386\",\n    officer: \"Kasuni Unkown\",\n  });\n  useEffect(() => {\n    // ipoData.fax = \"+94 412 333 386\"\n    setipoData({ ...ipoData, fax: \"+94 412 333 386\" });\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      message: \"\",\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"Name is Required\"),\n      email: Yup.string().email(\"Invalid Email\").required(\"Email is Required\"),\n      phone: Yup.string()\n        .matches(phoneRegExp, \"Invalid Phone Number\")\n        .min(9)\n        .max(10)\n        .required(\"Phone number is Required\"),\n      message: Yup.string()\n        .min(10, \"Message should contain 10 or above characters\")\n        .required(\"Message is Required\"),\n    }),\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <>\n      <div style={{ width: \"100%\", height: \"250px\" }}>\n        <MapView />\n      </div>\n\n      <Container maxWidth=\"md\" sx={{ my: 3 }}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Divider>\n              <Typography variant=\"h5\" sx={{ textTransform: \"uppercase\" }}>\n                Contact Us\n              </Typography>\n            </Divider>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} sx={{ px: 2, mt: 5 }}>\n            <Stack\n              direction=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Typography variant=\"h6\" sx={{ textTransform: \"uppercase\" }}>\n                IPO Contact Details\n              </Typography>\n\n              <TextField\n                fullWidth\n                color=\"primary\"\n                id=\"input-with-icon-textfield\"\n                label=\"Address\"\n                variant=\"outlined\"\n                value={ipoData.address}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <LocationOn />\n                    </InputAdornment>\n                  ),\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"Email Address\"\n                variant=\"outlined\"\n                value={ipoData.email}\n                color=\"primary\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Email />\n                    </InputAdornment>\n                  ),\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"Phone\"\n                variant=\"outlined\"\n                value={ipoData.phone}\n                color=\"primary\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <LocalPhone />\n                    </InputAdornment>\n                  ),\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"Fax\"\n                variant=\"outlined\"\n                value={ipoData.fax}\n                color=\"primary\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Fax />\n                    </InputAdornment>\n                  ),\n                  readOnly: true,\n                }}\n              />\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"Officer\"\n                variant=\"outlined\"\n                value={ipoData.officer}\n                color=\"primary\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Person />\n                    </InputAdornment>\n                  ),\n                  readOnly: true,\n                }}\n              />\n            </Stack>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6} sx={{ px: 2, mt: 5 }}>\n            <Stack\n              direction=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Typography variant=\"h6\" sx={{ textTransform: \"uppercase\" }}>\n                Get In Touch\n              </Typography>\n              <TextField\n                error={formik.touched.name && formik.errors.name}\n                fullWidth\n                id=\"outlined-error-helper-text\"\n                label=\"Name\"\n                helperText={formik.touched.name && formik.errors.name}\n                {...formik.getFieldProps(\"name\")}\n              />\n              <TextField\n                fullWidth\n                id=\"outlined-error-helper-text\"\n                label=\"Email Address\"\n                error={formik.touched.email && formik.errors.email}\n                helperText={formik.touched.email && formik.errors.email}\n                {...formik.getFieldProps(\"email\")}\n              />\n              <TextField\n                fullWidth\n                id=\"outlined-error-helper-text\"\n                label=\"Phone\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">+94</InputAdornment>\n                  ),\n                }}\n                error={formik.touched.phone && formik.errors.phone}\n                helperText={formik.touched.phone && formik.errors.phone}\n                {...formik.getFieldProps(\"phone\")}\n              />\n              <TextField\n                fullWidth\n                id=\"outlined-error-helper-text\"\n                label=\"Message\"\n                multiline\n                rows={4}\n                error={formik.touched.message && formik.errors.message}\n                helperText={formik.touched.message && formik.errors.message}\n                {...formik.getFieldProps(\"message\")}\n              />\n              <Button\n                fullWidth\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={formik.handleSubmit}\n              >\n                SUBMIT\n              </Button>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default ContactUs;\n"],"sourceRoot":""}