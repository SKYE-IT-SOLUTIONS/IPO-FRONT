{"version":3,"sources":["containers/Dashboard/common/Jobs.js"],"names":["Job","job","navigate","useNavigate","variant","component","title","sx","mb","color","position","fontSize","gutterBottom","salary","container","spacing","item","xs","md","deadline","textAlign","size","onClick","String","id","dataService","DataService","Jobs","useState","isLoading","setIsLoading","jobs","setJobs","useEffect","getAllJobs","then","data","error","console","log","maxWidth","my","map"],"mappings":"+NAaA,SAASA,EAAT,GAAuB,IAARC,EAAO,EAAPA,IACPC,EAAWC,cACjB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,SACGJ,EAAIK,QAEP,cAAC,IAAD,CAAYC,GAAI,CAAEC,GAAI,KAAOC,MAAM,iBAAnC,SACGR,EAAIS,WAEP,eAAC,IAAD,CAAYH,GAAI,CAAEI,SAAU,IAAMF,MAAM,iBAAiBG,cAAY,EAArE,yBACeX,EAAIY,UAEnB,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAAC,IAAD,CAAYd,QAAQ,KAAKK,MAAM,QAA/B,wBACcR,EAAIkB,cAGpB,cAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGE,UAAU,QAApC,SACE,cAAC,IAAD,CAAQC,KAAK,QAAQC,QAAS,kBAAMpB,EAASqB,OAAOtB,EAAIuB,MAAxD,iCAUZ,IAAMC,EAAc,IAAIC,IAiCTC,UA/BF,WACX,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAcA,OAZAC,qBAAU,WACRH,GAAa,GACbL,EAAYS,aAAaC,MAAK,YAAsB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjCD,EACFJ,EAAQI,GAERE,QAAQC,IAAIF,GAEdP,GAAa,QAEd,IAEID,EACL,cAAC,IAAD,IAEA,cAAC,IAAD,CAAWxB,UAAU,OAAOmC,SAAS,KAAKjC,GAAI,CAAEkC,GAAI,GAApD,SACE,cAAC,IAAD,CAAM3B,WAAS,EAACC,QAAS,EAAzB,SACGgB,EAAKW,KAAI,SAACzC,GAAD,OACR,cAAC,IAAD,CAAMe,MAAI,EAACC,GAAI,GAAf,SACE,cAACjB,EAAD,CAAKC,IAAKA,KADYA,EAAIuB,QAGxB,cAAC,IAAD","file":"static/js/59.58194a3e.chunk.js","sourcesContent":["import {\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Spinner from \"../../../components/Spinner\";\nimport DataService from \"../../../services/DataService\";\n\nfunction Job({ job }) {\n  const navigate = useNavigate();\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"div\">\n          {job.title}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          {job.position}\n        </Typography>\n        <Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\n          Salary - Rs.{job.salary}\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\" color=\"error\">\n              Deadline - {job.deadline}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6} textAlign=\"right\">\n            <Button size=\"small\" onClick={() => navigate(String(job.id))}>\n              View more\n            </Button>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nconst dataService = new DataService();\n\nconst Jobs = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [jobs, setJobs] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    dataService.getAllJobs().then(({ data, error }) => {\n      if (data) {\n        setJobs(data);\n      } else {\n        console.log(error);\n      }\n      setIsLoading(false);\n    });\n  }, []);\n\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <Container component=\"main\" maxWidth=\"md\" sx={{ my: 3 }}>\n      <Grid container spacing={3}>\n        {jobs.map((job) => (\n          <Grid item xs={12} key={job.id}>\n            <Job job={job} />\n          </Grid>\n        )) || <Typography>No jobs available</Typography>}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Jobs;\n"],"sourceRoot":""}