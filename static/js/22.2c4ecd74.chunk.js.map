{"version":3,"sources":["../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/ModeEditOutline.js","containers/Dashboard/Admin/Jobs/JobList.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","JobList","useState","page","setPage","pageSize","setPageSize","isLoading","setIsLoading","dataService","DataService","navigate","useNavigate","jobList","setJobList","setError","useEffect","fetchNews","a","getAllJobs","status","data","error","console","log","columns","field","type","headerName","headerAlign","align","width","rowWidth","sortable","disableClickEventBubbling","renderCell","id","style","cursor","sx","fontSize","onClick","deleteJob","filter","job","rows","map","title","approval","deadline","createdBy","addedBy","updatedDate","howLong","components","Toolbar","GridToolbar","onPageChange","newPage","onPageSizeChange","newPageSize","rowsPerPageOptions","pagination"],"mappings":"+GAEA,IAAIA,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,sNACD,cAEJP,EAAQE,QAAUG,G,iCCflB,IAAIT,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kFACD,UAEJP,EAAQE,QAAUG,G,iCCflB,IAAIT,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAiBP,EAAuBC,EAAQ,KAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,iJACD,mBAEJP,EAAQE,QAAUG,G,qNC4KHG,UA/KC,WACd,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,IAAIC,IAClBC,EAAWC,cAEjB,EAA8BV,mBAAS,IAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAA0BZ,mBAAS,IAAnC,mBAAca,GAAd,WAEAC,qBAAU,WACRR,GAAa,GACb,IAAMS,EAAS,uCAAG,kCAAAC,EAAA,sEACsBT,EAAYU,aADlC,gBACRC,EADQ,EACRA,OAAQC,EADA,EACAA,KAAMC,EADN,EACMA,MACtBC,QAAQC,IAAI,UAAWH,GACnBD,GACFG,QAAQC,IAAI,iBAAkBH,GAC9BP,EAAWO,KAEXN,EAASO,GACTC,QAAQC,IAAIF,IAEdd,GAAa,GAVG,2CAAH,qDAYfS,MACC,IAEH,IAAMQ,EAAU,CACd,CACEC,MAAO,KACPC,KAAM,SACNC,WAAY,KACZC,YAAa,SACbC,MAAO,SACPC,MAAO,IAET,CACEL,MAAO,QACPE,WAAY,QACZC,YAAa,SACbC,MAAO,OACPC,MAAO,KAET,CACEL,MAAO,WACPE,WAAY,WACZC,YAAa,SACbC,MAAO,SACPC,MAAO,KAET,CACEL,MAAO,SACPE,WAAY,SACZC,YAAa,SACbC,MAAO,SACPC,MAAO,KAET,CACEL,MAAO,YACPE,WAAY,aACZC,YAAa,SACbC,MAAO,SACPC,MAAO,KAET,CACEL,MAAO,cACPE,WAAY,UACZC,YAAa,SACbC,MAAO,SACPC,MAAOC,KAET,CACEN,MAAO,OACPE,WAAY,OACZC,YAAa,SACbC,MAAO,SACPG,UAAU,EACVF,MAAO,GACPG,2BAA2B,EAC3BC,WAAY,YAAwB,IAArBC,EAAoB,EAApBA,GAAoB,iBACjC,OACE,cAAC,IAAD,CACEC,MAAO,CAAEC,OAAQ,WACjBC,GAAI,CAAEC,SAAU,IAChBC,QAAS,WACP9B,EAAS,cAAD,OAAeyB,SAMjC,CACEV,MAAO,OACPE,WAAY,OACZC,YAAa,SACbC,MAAO,SACPG,UAAU,EACVF,MAAO,GACPG,2BAA2B,EAC3BC,WAAY,YAAwB,IAArBC,EAAoB,EAApBA,GAAoB,iBACjC,OACE,cAAC,IAAD,CACEC,MAAO,CAAEC,OAAQ,WACjBC,GAAI,CAAEC,SAAU,IAChBC,QAAS,WACP9B,EAAS,kBAAD,OAAmByB,SAMrC,CACEV,MAAO,SACPE,WAAY,SACZC,YAAa,SACbC,MAAO,SACPG,UAAU,EACVF,MAAO,GACPG,2BAA2B,EAC3BC,WAAY,YAAwB,IAArBC,EAAoB,EAApBA,GAAoB,iBACjC,OACE,cAAC,IAAD,CACEC,MAAO,CAAEC,OAAQ,WACjBC,GAAI,CAAEC,SAAU,IAChBC,QAAO,sBAAE,gCAAAvB,EAAA,sEACyBT,EAAYiC,UAAUN,GAD/C,gBACChB,EADD,EACCA,OAAQE,EADT,EACSA,MACZF,GACFN,EAAWD,EAAQ8B,QAAO,SAACC,GAAD,OAASA,EAAIR,KAAOA,MAC9CzB,EAAS,oBAETY,QAAQC,IAAIF,GANP,gDAebuB,EAAOhC,EAAQiC,KAAI,SAACF,GACxB,MAAO,CACLR,GAAE,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAKR,GACTW,MAAK,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAKG,MACZ3B,QAAW,OAAHwB,QAAG,IAAHA,OAAA,EAAAA,EAAKI,UAAW,WAAa,UACrCC,SAAQ,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAKK,SACfC,UAAS,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAKO,QAChBC,aAAgB,OAAHR,QAAG,IAAHA,OAAA,EAAAA,EAAKS,SAAU,YAIhC,OAAO9C,EACL,cAAC,IAAD,IAEA,mCACE,qBAAK8B,MAAO,CAAEN,MAAO,QAArB,SACE,cAAC,IAAD,CACEN,QAASA,EACToB,KAAMA,EACNS,WAAY,CACVC,QAASC,KAEXrD,KAAMA,EACNsD,aAAc,SAACC,GAAD,OAAatD,EAAQsD,IACnCrD,SAAUA,EACVsD,iBAAkB,SAACC,GAAD,OAAiBtD,EAAYsD,IAC/CC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,YAAU","file":"static/js/22.2c4ecd74.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 5.63l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41z\"\n}), 'ModeEditOutline');\n\nexports.default = _default;","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\n\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ViewIcon from \"@mui/icons-material/Visibility\";\nimport ModeEditOutlineIcon from \"@mui/icons-material/ModeEditOutline\";\nimport DataService from \"../../../../services/DataService\";\nimport Spinner from \"../../../../components/Spinner\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst rowWidth = 200;\n\nconst JobList = () => {\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(8);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dataService = new DataService();\n  const navigate = useNavigate();\n\n  const [jobList, setJobList] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchNews = async () => {\n      const { status, data, error } = await dataService.getAllJobs();\n      console.log(\"data : \", data);\n      if (status) {\n        console.log(\"In Admin job: \", data);\n        setJobList(data);\n      } else {\n        setError(error);\n        console.log(error);\n      }\n      setIsLoading(false);\n    };\n    fetchNews();\n  }, []);\n\n  const columns = [\n    {\n      field: \"id\",\n      type: \"number\",\n      headerName: \"ID\",\n      headerAlign: \"center\",\n      align: \"center\",\n      width: 70,\n    },\n    {\n      field: \"title\",\n      headerName: \"Title\",\n      headerAlign: \"center\",\n      align: \"left\",\n      width: 2 * rowWidth,\n    },\n    {\n      field: \"deadline\",\n      headerName: \"Deadline\",\n      headerAlign: \"center\",\n      align: \"center\",\n      width: 0.75 * rowWidth,\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      headerAlign: \"center\",\n      align: \"center\",\n      width: 0.5 * rowWidth,\n    },\n    {\n      field: \"createdBy\",\n      headerName: \"Created By\",\n      headerAlign: \"center\",\n      align: \"center\",\n      width: 1.5 * rowWidth,\n    },\n    {\n      field: \"updatedDate\",\n      headerName: \"Updated\",\n      headerAlign: \"center\",\n      align: \"center\",\n      width: rowWidth - 50,\n    },\n    {\n      field: \"view\",\n      headerName: \"View\",\n      headerAlign: \"center\",\n      align: \"center\",\n      sortable: false,\n      width: 80,\n      disableClickEventBubbling: true,\n      renderCell: ({ id, ...params }) => {\n        return (\n          <ViewIcon\n            style={{ cursor: \"pointer\" }}\n            sx={{ fontSize: 30 }}\n            onClick={() => {\n              navigate(`/admin/job/${id}`);\n            }}\n          />\n        );\n      },\n    },\n    {\n      field: \"edit\",\n      headerName: \"Edit\",\n      headerAlign: \"center\",\n      align: \"center\",\n      sortable: false,\n      width: 60 + 20,\n      disableClickEventBubbling: true,\n      renderCell: ({ id, ...params }) => {\n        return (\n          <ModeEditOutlineIcon\n            style={{ cursor: \"pointer\" }}\n            sx={{ fontSize: 30 }}\n            onClick={() => {\n              navigate(`/admin/editJob/${id}`);\n            }}\n          />\n        );\n      },\n    },\n    {\n      field: \"delete\",\n      headerName: \"Delete\",\n      headerAlign: \"center\",\n      align: \"center\",\n      sortable: false,\n      width: 70 + 20,\n      disableClickEventBubbling: true,\n      renderCell: ({ id, ...params }) => {\n        return (\n          <DeleteIcon\n            style={{ cursor: \"pointer\" }}\n            sx={{ fontSize: 30 }}\n            onClick={async () => {\n              const { status, error } = await dataService.deleteJob(id);\n              if (status) {\n                setJobList(jobList.filter((job) => job.id !== id));\n                navigate(\"/admin/job/list\");\n              } else {\n                console.log(error);\n              }\n            }}\n          />\n        );\n      },\n    },\n  ];\n\n  const rows = jobList.map((job) => {\n    return {\n      id: job?.id,\n      title: job?.title,\n      status: job?.approval ? \"Approved\" : \"Pending\",\n      deadline: job?.deadline,\n      createdBy: job?.addedBy,\n      updatedDate: job?.howLong + \"  ago\",\n    };\n  });\n\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <>\n      <div style={{ width: \"100%\" }}>\n        <DataGrid\n          columns={columns}\n          rows={rows}\n          components={{\n            Toolbar: GridToolbar,\n          }}\n          page={page}\n          onPageChange={(newPage) => setPage(newPage)}\n          pageSize={pageSize}\n          onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n          rowsPerPageOptions={[8, 10, 12]}\n          pagination\n        />\n      </div>\n    </>\n  );\n};\n\nexport default JobList;\n"],"sourceRoot":""}