{"version":3,"sources":["../node_modules/react-bootstrap/esm/Image.js","components/NewsView.js"],"names":["Image","PropTypes","string","bool","React","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","NewContainer","styled","Container","font","general","Title","h2","Content","p","Date","title","NewsView","dataService","DataService","navigate","useNavigate","id","useParams","useState","url","description","uploadTime","newsData","setNewsData","setError","isLoading","setisLoading","storeTitle","useSelector","state","news","storeImage","image","storeDescription","useEffect","fetchNews","a","undefined","console","log","getNews","status","data","error","howLong","fonts","useContext","ThemeContext","Spinner","md","sm","src","map","d","index"],"mappings":"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","file":"static/js/4.6f885439.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport styled from \"styled-components\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { Container, Row, Col } from \"./CommonComponents\";\nimport { useParams } from \"react-router-dom\";\nimport DataService from \"../services/DataService\";\n// import Snackbar from \"./CustomSnackBar\";\nimport { useSelector } from \"react-redux\";\nimport Spinner from \"./Spinner\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewContainer = styled(Container)`\n  font-family: ${({ font }) => font.general};\n  padding: 20px 0;\n\n  @media (max-width: 600px) {\n    padding: 20px 20px;\n  }\n`;\n\nconst Title = styled.h2`\n  text-align: justify;\n  padding-bottom: 15px;\n\n  @media (max-width: 600px) {\n    font-size: 22px;\n  }\n`;\n\nconst Content = styled.p`\n  text-align: justify;\n  padding-top: 20px;\n\n  @media (max-width: 600px) {\n    font-size: 13px;\n  }\n`;\n\nconst Date = styled.p`\n  color: #001e62;\n  font-family: ${({ font }) => font.title};\n  @media (max-width: 600px) {\n    font-size: 13px;\n  }\n`;\n\nfunction NewsView() {\n  const dataService = new DataService();\n  const navigate = useNavigate();\n\n  const { id } = useParams();\n\n  const [newsData, setNewsData] = useState({\n    title: \"\",\n    url: \"\",\n    description: [],\n    uploadTime: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [isLoading, setisLoading] = useState(false);\n\n  const storeTitle = useSelector((state) => state.news.title);\n  const storeImage = useSelector((state) => state.news.image);\n  const storeDescription = useSelector((state) => state.news.description);\n\n  useEffect(() => {\n    setisLoading(true);\n    const fetchNews = async () => {\n      if (id !== undefined && id !== null) {\n        console.log(\"Database Call\");\n        console.log(id);\n        const { status, data, error } = id\n          ? await dataService.getNews(id)\n          : null;\n        if (status) {\n          console.log(\"After add : \", data);\n          setNewsData({\n            title: data.title,\n            url: data.url,\n            description: data.description,\n            uploadTime: data.howLong,\n          });\n        } else {\n          setError(error);\n          navigate(\"/404\");\n        }\n      } else {\n        setNewsData({\n          title: storeTitle,\n          url: storeImage,\n          description: storeDescription,\n          uploadTime: \"Not Uploaded Yet\",\n        });\n      }\n      setisLoading(false);\n    };\n    fetchNews();\n  }, []);\n\n  const { fonts } = useContext(ThemeContext);\n  return (\n    <>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <NewContainer font={fonts}>\n          {newsData && (\n            <>\n              <Row>\n                <Col md={6} sm={12}>\n                  <Title>{newsData?.title}</Title>\n                </Col>\n                <Col md={6} sm={12}>\n                  <Image src={newsData?.url} thumbnail />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  {newsData?.description?.map((d, index) => {\n                    return (\n                      <Content key={index} className=\"paragraph\">\n                        {d}\n                      </Content>\n                    );\n                  })}\n                </Col>\n              </Row>{\" \"}\n              <Date font={fonts}>Last updated - {newsData.uploadTime}</Date>\n            </>\n          )}\n        </NewContainer>\n      )}\n    </>\n  );\n}\n\nexport default NewsView;\n"],"sourceRoot":""}