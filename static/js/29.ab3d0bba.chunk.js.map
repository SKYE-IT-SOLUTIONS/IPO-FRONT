{"version":3,"sources":["components/CustomSnackBar.js","utils/passwordMatcher.js","assets/Businessman.svg","components/CompanyRegister.js"],"names":["Alert","React","forwardRef","props","ref","elevation","variant","CustomSnackBar","isOpen","handleClose","severity","message","open","autoHideDuration","onClose","sx","width","passwordMatcher","password1","password2","error","isMatching","RegistrationDiv","styled","Container","font","general","LoginImg","img","AddInput","Input","Heading","h1","Success","p","LoginCol","Col","LoginBttn","CustomButton","bgColor","SeparateDiv","div","Error","CompanyRegister","useContext","ThemeContext","theme","light","dark","fonts","them","button","fileService","FileService","useState","name","setName","email","setemail","person","setPerson","contact","setContact","no","setNo","street","setStreet","city","setCity","password","setpassword","confirmPassword","setConfirmPassword","status","nameInfo","setNameInfo","emailInfo","setEmailInfo","personInfo","setPersonInfo","contactInfo","setContactInfo","cityInfo","setCityInfo","passwordInfo","setPasswordInfo","matchPassword","setMatchPassword","setError","isErrorMsgOpen","setIsErrorMsgOpen","isLoading","setIsLoading","recaptcha","setRecaptcha","imageUrl","setImageUrl","files","setFiles","filesU","setFilesU","updateUploadedFiles","a","length","console","log","handleCreate","data","fileUrl","authServices","AuthServices","navigate","useNavigate","handleSubmit","credentials","handleCompanySignUp","state","style","paddingTop","md","sm","xs","src","company","type","onChange","e","val","target","value","Simple_Validator","Validator","patternMail","patternContact","placeholder","FileUpload","backgroundColor","accept","label","updateFilesCb","size","toFixed","patternPassword","disabled","disable","submit","onClick","companyname","conatctperson","conatctnumber","address","imgUrl","event","reason"],"mappings":"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","file":"static/js/29.ab3d0bba.chunk.js","sourcesContent":["/* eslint-disable no-lone-blocks */\nimport React from \"react\";\n\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function CustomSnackBar({\n  isOpen,\n  handleClose,\n  severity,\n  message,\n}) {\n  return (\n    <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\n        {message}!\n      </Alert>\n    </Snackbar>\n  );\n}\n\n{\n/* <Alert severity=\"error\">This is an error message!</Alert>\n    <Alert severity=\"warning\">This is a warning message!</Alert>\n    <Alert severity=\"info\">This is an information message!</Alert>\n    <Alert severity=\"success\">This is a success message!</Alert> */\n}\n","export const passwordMatcher = (password1,password2) => {\n    let error = null\n    let isMatching = false\n    if(password1 === \"\"){\n        error = \"Password is empty\"\n    }else if(password1 === password2){\n        isMatching = true\n    }else{\n        error = \"Password is not matching\"\n    }\n    return {error,isMatching}\n}","export default __webpack_public_path__ + \"static/media/Businessman.45d580f0.svg\";","import React, { useContext, useState } from \"react\";\nimport {\n  CustomButton,\n  Input,\n  Lable,\n  Container,\n  Row,\n  Col,\n} from \"./CommonComponents\";\nimport styled from \"styled-components\";\nimport company from \"../assets/Businessman.svg\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { passwordMatcher } from \"../utils/passwordMatcher\";\nimport { Simple_Validator, Validator } from \"../utils/validation\";\nimport {\n  patternPassword,\n  patternContact,\n  patternMail,\n} from \"../config/pattern\";\nimport AuthServices from \"../services/AuthServices\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomSnackBar from \"./CustomSnackBar\";\nimport { Recaptcha } from \"./CommonComponents\";\nimport FileUpload from \"./fileupload/FileUpload\";\nimport FileService from \"../services/FileService\";\n\nconst RegistrationDiv = styled(Container)`\n  font-family: ${({ font }) => font.general};\n`;\n\nconst LoginImg = styled.img`\n  width: 100%;\n`;\n\nconst AddInput = styled(Input)`\n  margin-top: 10px;\n`;\n\nconst Heading = styled.h1`\n  font-size: 25px;\n  text-align: left;\n  padding: 10px 0px;\n  font-weight: bolder;\n  color: #001e62;\n  text-align: center;\n  /* margin-top: -30px; */\n`;\n\nconst Success = styled.p`\n  color: #009933;\n  font-size: 13px;\n  margin: 0px;\n  text-align: left;\n  padding: 5px 0 5px 2px;\n`;\n\nconst LoginCol = styled(Col)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst LoginBttn = styled(CustomButton)`\n  width: 150px;\n  margin: 15px 0px;\n  background: ${({ bgColor }) => bgColor};\n`;\n\nconst SeparateDiv = styled.div`\n  border: 4px solid;\n  border-radius: 10px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 15px;\n  text-align: left;\n  background-color: #eef2f3;\n`;\n\nconst Error = styled.p`\n  color: #dc281e;\n  font-size: 13px;\n  margin: 0px;\n  text-align: left;\n  padding: 5px 0 5px 2px;\n`;\n\nfunction CompanyRegister() {\n  const { theme, light, dark, fonts } = useContext(ThemeContext);\n  const them = theme ? light.button : dark.button;\n  const fileService = new FileService();\n\n  const [name, setName] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [person, setPerson] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [no, setNo] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [nameInfo, setNameInfo] = useState({ error: null, status: false });\n  const [emailInfo, setEmailInfo] = useState({ error: null, status: false });\n  const [personInfo, setPersonInfo] = useState({ error: null, status: false });\n  const [contactInfo, setContactInfo] = useState({\n    error: null,\n    status: false,\n  });\n  const [cityInfo, setCityInfo] = useState({ error: null, status: false });\n  const [passwordInfo, setPasswordInfo] = useState({\n    error: null,\n    status: false,\n  });\n  const [matchPassword, setMatchPassword] = useState({\n    error: null,\n    isMatching: false,\n  });\n\n  const [error, setError] = useState(\"\");\n  const [isErrorMsgOpen, setIsErrorMsgOpen] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [recaptcha, setRecaptcha] = useState(false);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [filesU, setFilesU] = useState({});\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsErrorMsgOpen(false);\n  };\n\n  function onChange(value) {\n    console.log(\"Captcha value:\", value);\n    setRecaptcha(!recaptcha);\n  }\n\n  const updateUploadedFiles = async (files) => {\n    if (files.length !== 0) {\n      setFiles(files);\n      console.log(files[0]);\n\n      const { status, error, data } = await fileService.handleCreate(files[0]);\n\n      if (status) {\n        console.log(\"fileURL\", data?.fileUrl);\n        setImageUrl(data?.fileUrl);\n      } else {\n        console.log(\"error\", error);\n      }\n    }\n  };\n\n  const authServices = new AuthServices();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (credentials) => {\n    console.log(credentials);\n    setIsLoading(true);\n    const { status, data, error } = await authServices.handleCompanySignUp(\n      credentials\n    );\n    if (status) {\n      navigate(\"/register/sendMail\", { state: { email: data } });\n    } else {\n      setError(error);\n      setIsErrorMsgOpen(true);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <RegistrationDiv font={fonts}>\n      <Row style={{ paddingTop: \"10px\" }}>\n        <LoginCol md={6} sm={12} xs={12}>\n          <LoginImg src={company} />\n        </LoginCol>\n        <LoginCol md={6} sm={12} xs={12}>\n          <SeparateDiv>\n            <Heading>COMPANY REGISTRATION</Heading>\n\n            <Lable>Company Name</Lable>\n            <Input\n              type=\"text\"\n              onChange={(e) => {\n                let val = e.target.value;\n                setName(val);\n                setNameInfo(Simple_Validator(val, \"Company Name\"));\n              }}\n            />\n            {nameInfo.error && <Error>{nameInfo.error}</Error>}\n\n            <Lable>Email</Lable>\n            <Input\n              type=\"email\"\n              onChange={(e) => {\n                let val = e.target.value;\n                setemail(val);\n                setEmailInfo(Validator(val, patternMail, \"Email\"));\n              }}\n            />\n            {emailInfo.error && <Error>{emailInfo.error}</Error>}\n\n            <Lable>Contact Person</Lable>\n            <Input\n              type=\"text\"\n              onChange={(e) => {\n                let val = e.target.value;\n                setPerson(val);\n                setPersonInfo(Simple_Validator(val, \"Contact person\"));\n              }}\n            />\n            {personInfo.error && <Error>{personInfo.error}</Error>}\n\n            <Lable>Contact Number</Lable>\n            <Input\n              type=\"text\"\n              onChange={(e) => {\n                let val = e.target.value;\n                setContact(val);\n                setContactInfo(\n                  Validator(val, patternContact, \"Contact number\")\n                );\n              }}\n            />\n            {contactInfo.error && <Error>{contactInfo.error}</Error>}\n\n            <Lable>Address</Lable>\n            <Input\n              type=\"text\"\n              placeholder=\"No\"\n              onChange={(e) => {\n                setNo(e.target.value);\n              }}\n            />\n            <AddInput\n              type=\"text\"\n              placeholder=\"Street\"\n              onChange={(e) => {\n                setStreet(e.target.value);\n              }}\n            />\n            <AddInput\n              type=\"text\"\n              placeholder=\"City\"\n              onChange={(e) => {\n                let val = e.target.value;\n                setCity(val);\n                setCityInfo(Simple_Validator(val, \"City\"));\n              }}\n            />\n            {cityInfo.error && <Error>{cityInfo.error}</Error>}\n\n            <Lable>Image</Lable>\n            <FileUpload\n              style={{ backgroundColor: \"#ededed\" }}\n              accept=\".jpg,.png,.jpeg\"\n              label=\"News Image(s)\"\n              files={filesU}\n              setFiles={setFilesU}\n              updateFilesCb={updateUploadedFiles}\n            />\n            {files[0] && (\n              <p>\n                {\"name : \" + files[0].name}\n                <br />\n                {\"size : \" + (files[0].size / 1000000).toFixed(2)}MB\n              </p>\n            )}\n\n            <Lable>Password</Lable>\n            <Input\n              type=\"password\"\n              value={password}\n              onChange={(e) => {\n                let val = e.target.value;\n                setPasswordInfo(Validator(val, patternPassword, \"Password\"));\n                setpassword(e.target.value);\n                setMatchPassword(passwordMatcher(val, confirmPassword));\n              }}\n            />\n            {passwordInfo.error && <Error>{passwordInfo.error}</Error>}\n\n            <Lable>Confirm Password</Lable>\n            <Input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => {\n                let value = e.target.value;\n                setConfirmPassword(value);\n                setMatchPassword(passwordMatcher(password, value));\n                // console.log(val)\n              }}\n            />\n\n            {!matchPassword.isMatching ? (\n              <Error>{matchPassword.error}</Error>\n            ) : (\n              <Success>Password is matching</Success>\n            )}\n            <Recaptcha onChange={onChange} />\n            <LoginBttn\n              disabled={\n                !recaptcha ||\n                isLoading ||\n                !nameInfo.status ||\n                !emailInfo.status ||\n                !personInfo.status ||\n                !contactInfo.status ||\n                !cityInfo.status ||\n                !passwordInfo.status ||\n                !matchPassword.isMatching\n              }\n              bgColor={!isLoading ? them.submit : them.disable}\n              onClick={() => {\n                if (\n                  nameInfo.status &&\n                  emailInfo.status &&\n                  personInfo.status &&\n                  contactInfo.status &&\n                  cityInfo.status &&\n                  passwordInfo.status &&\n                  matchPassword.isMatching &&\n                  imageUrl !== \"\"\n                ) {\n                  handleSubmit({\n                    email: email,\n                    password: password,\n                    companyname: name,\n                    conatctperson: person,\n                    conatctnumber: contact,\n                    address: `${no},${street},${city}`,\n                    imgUrl: imageUrl,\n                  });\n                }\n              }}\n            >\n              Register\n            </LoginBttn>\n          </SeparateDiv>\n        </LoginCol>\n      </Row>\n      <CustomSnackBar\n        isOpen={isErrorMsgOpen}\n        severity=\"error\"\n        handleClose={handleClose}\n        message={error}\n      />\n    </RegistrationDiv>\n  );\n}\n\nexport default CompanyRegister;\n"],"sourceRoot":""}