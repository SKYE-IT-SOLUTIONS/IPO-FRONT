{"version":3,"sources":["containers/Dashboard/common/UnList.js","containers/Dashboard/common/Job.js"],"names":["Body","key","text","variant","color","gutterBottom","UnList","list","length","map","i","k","dataService","DataService","Section","title","textAlign","sx","my","Job","id","useParams","useState","isLoading","setIsLoading","job","setJob","useEffect","getJob","then","data","err","console","log","component","maxWidth","position","salary","deadline","description","specifications","qualifications","experiences","mt","onClick","applyJob","error","alert"],"mappings":"+GAAA,oBAEA,SAASA,EAAT,GAA8B,IAAdC,EAAa,EAAbA,IAAKC,EAAQ,EAARA,KACnB,OACE,cAAC,IAAD,CAAsBC,QAAQ,QAAQC,MAAM,iBAAiBC,cAAY,EAAzE,SACGH,GADcD,GAuBNK,IAjBf,YAA2B,IAATC,EAAQ,EAARA,KAChB,OAAKA,GAAwB,IAAhBA,EAAKC,OAGK,IAAhBD,EAAKC,OACV,cAACR,EAAD,CAAME,KAAMK,EAAK,KAEjB,6BACGA,EAAKE,KAAI,SAACC,EAAGC,GAAJ,OACR,6BACE,cAACX,EAAD,CAAcE,KAAMQ,GAATC,UARV,O,iJCJLC,EAAc,IAAIC,IAExB,SAASC,EAAT,GAAmC,IAAhBC,EAAe,EAAfA,MAAOR,EAAQ,EAARA,KACxB,OACE,qCACE,cAAC,IAAD,CAASS,UAAU,OAAOC,GAAI,CAAEC,GAAI,GAApC,SACE,cAAC,IAAD,CAAYf,QAAQ,KAAKE,cAAY,EAArC,SACGU,MAGL,cAAC,IAAD,CAAQR,KAAMA,OAoELY,UA/DH,WACV,IAAQC,EAAOC,cAAPD,GAER,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAcA,OAZAC,qBAAU,WACRH,GAAa,GACbZ,EAAYgB,OAAOR,GAAIS,MAAK,YAAoB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAC/BD,EACFJ,EAAOI,GAEPE,QAAQC,IAAIF,GAEdP,GAAa,QAEd,CAACJ,IAEGG,EACL,cAAC,IAAD,IAEA,eAAC,IAAD,CAAWW,UAAU,OAAOC,SAAS,KAAKlB,GAAI,CAAEC,GAAI,GAApD,UACE,cAAC,IAAD,CAAYf,QAAQ,KAAK+B,UAAU,MAAM7B,cAAY,EAArD,SACGoB,EAAIV,QAEP,cAAC,IAAD,CAAYZ,QAAQ,QAAQC,MAAM,iBAAiBC,cAAY,EAA/D,SACGoB,EAAIW,WAEP,eAAC,IAAD,CAAYjC,QAAQ,QAAQE,cAAY,EAAxC,gBACMoB,EAAIY,UAEV,eAAC,IAAD,CAAYlC,QAAQ,KAAKC,MAAM,QAAQC,cAAY,EAAnD,wBACcoB,EAAIa,YAElB,cAAC,IAAD,CAAYnC,QAAQ,QAAQE,cAAY,EAAxC,SACGoB,EAAIc,cAEP,cAACzB,EAAD,CAASC,MAAM,iBAAiBR,KAAMkB,EAAIe,iBAC1C,cAAC1B,EAAD,CAASC,MAAM,iBAAiBR,KAAMkB,EAAIgB,iBAC1C,cAAC3B,EAAD,CAASC,MAAM,aAAaR,KAAMkB,EAAIiB,cACtC,cAAC,IAAD,CAAKzB,GAAI,CAAED,UAAW,SAAtB,SACE,cAAC,IAAD,CACEb,QAAQ,YACRc,GAAI,CAAE0B,GAAI,GACVC,QAAS,WACPpB,GAAa,GACbZ,EAAYiC,SAASzB,GAAIS,MAAK,YAAsB,IAAnBC,EAAkB,EAAlBA,KAAMgB,EAAY,EAAZA,MACrCtB,GAAa,GACTM,EACFiB,MAAM,qCAENA,MAAMD,OAVd","file":"static/js/39.af0c0047.chunk.js","sourcesContent":["import { Typography } from \"@mui/material\";\n\nfunction Body({ key, text }) {\n  return (\n    <Typography key={key} variant=\"body2\" color=\"text.secondary\" gutterBottom>\n      {text}\n    </Typography>\n  );\n}\n\nfunction UnList({ list }) {\n  if (!list || list.length === 0) {\n    return null;\n  }\n  return list.length === 1 ? (\n    <Body text={list[0]} />\n  ) : (\n    <ul>\n      {list.map((i, k) => (\n        <li>\n          <Body key={k} text={i} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default UnList;\n","/* eslint-disable no-unused-vars */\nimport { Box, Button, Container, Divider, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"../../../components/Spinner\";\nimport DataService from \"../../../services/DataService\";\nimport UnList from \"./UnList\";\n\nconst dataService = new DataService();\n\nfunction Section({ title, list }) {\n  return (\n    <>\n      <Divider textAlign=\"left\" sx={{ my: 3 }}>\n        <Typography variant=\"h7\" gutterBottom>\n          {title}\n        </Typography>\n      </Divider>\n      <UnList list={list} />\n    </>\n  );\n}\n\nconst Job = () => {\n  const { id } = useParams();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [job, setJob] = useState({});\n\n  useEffect(() => {\n    setIsLoading(true);\n    dataService.getJob(id).then(({ data, err }) => {\n      if (data) {\n        setJob(data);\n      } else {\n        console.log(err);\n      }\n      setIsLoading(false);\n    });\n  }, [id]);\n\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <Container component=\"main\" maxWidth=\"md\" sx={{ my: 3 }}>\n      <Typography variant=\"h4\" component=\"div\" gutterBottom>\n        {job.title}\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n        {job.position}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        Rs.{job.salary}\n      </Typography>\n      <Typography variant=\"h6\" color=\"error\" gutterBottom>\n        Deadline - {job.deadline}\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        {job.description}\n      </Typography>\n      <Section title=\"Specifications\" list={job.specifications} />\n      <Section title=\"Qualifications\" list={job.qualifications} />\n      <Section title=\"Experience\" list={job.experiences} />\n      <Box sx={{ textAlign: \"right\" }}>\n        <Button\n          variant=\"contained\"\n          sx={{ mt: 3 }}\n          onClick={() => {\n            setIsLoading(true);\n            dataService.applyJob(id).then(({ data, error }) => {\n              setIsLoading(false);\n              if (data) {\n                alert(\"Successfully applied for this job\");\n              } else {\n                alert(error);\n              }\n            });\n          }}\n        >\n          Apply\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Job;\n"],"sourceRoot":""}