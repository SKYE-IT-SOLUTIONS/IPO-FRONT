{"version":3,"sources":["containers/Dashboard/Student/internship/Step1.js","containers/Dashboard/Student/internship/Step2.js","containers/Dashboard/Student/internship/Step3.js","containers/Dashboard/Student/internship/index.js"],"names":["Step1","errors","handleBlur","handleChange","touched","handleSubmit","isSubmitting","values","resetForm","Container","component","maxWidth","Grid","container","spacing","sx","mt","item","xs","sm","Divider","Typography","variant","md","TextField","fullWidth","error","Boolean","fullName","helperText","label","name","id","onBlur","onChange","e","a","value","nameWithInit","FormControl","InputLabel","Select","labelId","gender","MenuItem","email","regNo","mobile1","mobile2","type","address","multiline","rows","gName","gMobile","gAddress","Step2","companies","title","Autocomplete","freeSolo","disableClearable","options","map","option","renderInput","params","company1","onSelect","InputProps","company2","company3","degree","Box","display","flexDirection","flexGrow","textAlign","gpaL11","gpaL12","gpaL21","gpaL22","gpaL31","gpaL32","disabled","overall","v","gpa","Object","keys","filter","k","startsWith","sum","reduce","i","Math","round","length","overAllVal","ColorlibConnector","styled","StepConnector","theme","stepConnectorClasses","alternativeLabel","top","active","line","backgroundImage","completed","height","border","backgroundColor","palette","mode","grey","borderRadius","ColorlibStepIconRoot","ownerState","zIndex","color","width","justifyContent","alignItems","boxShadow","ColorlibStepIcon","props","className","icons","String","icon","steps","Internship","React","activeStep","setActiveStep","Set","skipped","setSkipped","isStepSkipped","step","has","handleNext","newSkipped","delete","prevActiveStep","handleBack","switchTab","tab","data","console","log","Step3","p","Paper","elevation","px","py","mb","Stepper","connector","index","stepProps","Step","StepLabel","StepIconComponent","pt","flex","Button","onClick","initialValues","phone","validationSchema","Yup","shape","required","matches","phoneRegExp","min","max","onSubmit","mr","isValid"],"mappings":"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","file":"static/js/58.197a7902.chunk.js","sourcesContent":["import {\n  Container,\n  Divider,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\n\nconst Step1 = ({\n  errors,\n  handleBlur,\n  handleChange,\n  handleSubmit,\n  isSubmitting,\n  touched,\n  resetForm,\n  values,\n}) => {\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n        <Grid container spacing={3} sx={{mt:1}}>\n        <Grid item xs={12} sm={12}>\n          <Divider>\n            <Typography variant=\"h6\">PERSONAL DETAILS</Typography>\n          </Divider>\n        </Grid>\n          <Grid item md={12} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.fullName && errors.fullName)}\n              helperText={touched.fullName && errors.fullName}\n              label=\" Full Name\"\n              name=\"fullName\"\n              id=\"fullName\"\n              onBlur={handleBlur}\n              onChange={async(e)=>{handleChange(e)}}\n              value={values.fullName}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.nameWithInit && errors.nameWithInit)}\n              helperText={touched.nameWithInit && errors.nameWithInit}\n              label=\"Name With Initials\"\n              name=\"nameWithInit\"\n              id=\"nameWithInit\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.nameWithInit}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                name=\"gender\"\n                value={values.gender}\n                label=\"Age\"\n                onChange={handleChange}\n              >\n                <MenuItem value=\"male\" >Male</MenuItem>\n                <MenuItem value=\"female\">Female</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.email && errors.email)}\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.regNo && errors.regNo)}\n              helperText={touched.regNo && errors.regNo}\n              label=\"Registration Number (AG/AT/2016/XXXX)*\"\n              name=\"regNo\"\n              id=\"regNo\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.regNo}\n              variant=\"outlined\"\n            />\n          </Grid>\n          {/* <Grid item md={6} xs={12} /> */}\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.mobile1 && errors.mobile1)}\n              helperText={touched.mobile1 && errors.mobile1}\n              label=\"Phone 1\"\n              name=\"mobile1\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.mobile1}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.mobile2 && errors.mobile2)}\n              helperText={touched.mobile2 && errors.mobile2}\n              label=\"Phone 2\"\n              name=\"mobile2\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"text\"\n              value={values.mobile2}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={12} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.address && errors.address)}\n              helperText={touched.address && errors.address}\n              label=\"Address\"\n              name=\"address\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.address}\n              variant=\"outlined\"\n              multiline\n              rows={3}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Divider>\n              <Typography variant=\"h6\">GUARDIAN DETAILS</Typography>\n            </Divider>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.gName && errors.gName)}\n              helperText={touched.gName && errors.gName}\n              label=\"Guardian Name\"\n              name=\"gName\"\n              id=\"gName\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.gName}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.gMobile && errors.gMobile)}\n              helperText={touched.gMobile && errors.gMobile}\n              label=\"Guardian Mobile\"\n              name=\"gMobile\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              type=\"text\"\n              value={values.gMobile}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={12} xs={12}>\n            <TextField\n              fullWidth\n              error={Boolean(touched.gAddress && errors.gAddress)}\n              helperText={touched.gAddress && errors.gAddress}\n              label=\"Guardian Address\"\n              name=\"gAddress\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.gAddress}\n              variant=\"outlined\"\n              multiline\n              rows={3}\n            />\n          </Grid>\n        </Grid>\n\n      <Divider />\n    </Container>\n  );\n};\nexport default Step1;\n","import {\n  Autocomplete,\n  Box,\n  Container,\n  Divider,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\n\nconst Step2 = ({\n  errors,\n  handleBlur,\n  handleChange,\n  handleSubmit,\n  isSubmitting,\n  touched,\n  resetForm,\n  values,\n}) => {\n  const companies = [\n    { id: 1, title: \"Google\" },\n    { id: 2, title: \"Facebook\" },\n    { id: 3, title: \"Amazon\" },\n  ];\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n\n        <Grid container spacing={3}>\n        <Grid item xs={12} sm={12}>\n          <Divider>\n            <Typography variant=\"h6\">CHOICE LIST</Typography>\n          </Divider>\n        </Grid>\n          <Grid item md={12} xs={12}>\n            <Autocomplete\n              freeSolo\n              id=\"free-solo-2-demo\"\n              disableClearable\n              options={companies.map((option) => option.title)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Preferred Company/Institution (Choice I)\"\n                  error={Boolean(touched.company1 && errors.company1)}\n                  helperText={touched.company1 && errors.company1}\n                  name=\"company1\"\n                  id=\"company1\"\n                  onBlur={handleBlur}\n                  onSelect={handleChange}\n                  value={values.company1}\n                  InputProps={{\n                    ...params.InputProps,\n                    type: \"search\",\n                  }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item md={12} xs={12}>\n            <Autocomplete\n              freeSolo\n              id=\"free-solo-2-demo\"\n              disableClearable\n              options={companies.map((option) => option.title)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Preferred Company/Institution (Choice II)\"\n                  error={Boolean(touched.company2 && errors.company2)}\n                  helperText={touched.company2 && errors.company2}\n                  name=\"company2\"\n                  id=\"company2\"\n                  onBlur={handleBlur}\n                  onSelect={handleChange}\n                  value={values.company2}\n                  InputProps={{\n                    ...params.InputProps,\n                    type: \"search\",\n                  }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item md={12} xs={12}>\n            <Autocomplete\n              freeSolo\n              id=\"free-solo-2-demo\"\n              disableClearable\n              options={companies.map((option) => option.title)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Preferred Company/Institution (Choice III)\"\n                  error={Boolean(touched.company3 && errors.company3)}\n                  helperText={touched.company3 && errors.company3}\n                  name=\"company3\"\n                  id=\"company3\"\n                  onBlur={handleBlur}\n                  onSelect={handleChange}\n                  value={values.company3}\n                  InputProps={{\n                    ...params.InputProps,\n                    type: \"search\",\n                  }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Divider>\n              <Typography variant=\"h6\">DEGREE DETAILS</Typography>\n            </Divider>\n          </Grid>\n          <Grid item md={12} xs={12}>\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-simple-select-label\">Degree Program</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                name=\"degree\"\n                value={values.degree}\n                label=\"Degree Program\"\n                onChange={handleChange}\n              >\n                <MenuItem value=\"male\">Agricultural Resource Management and Technology</MenuItem>\n                <MenuItem value=\"female\">Agribusiness Management</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Box sx={{display:\"flex\",flexDirection:\"column\",flexGrow:1}}></Box>\n        </Grid>\n      <Divider />\n    </Container>\n  );\n};\nexport default Step2;\n","import {\n  Container,\n  Divider,\n  Grid,\n\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\n\nconst Step1 = ({\n  errors,\n  handleBlur,\n  handleChange,\n  handleSubmit,\n  isSubmitting,\n  touched,\n  resetForm,\n  values,\n}) => {\n  const overAllVal =(v)=>{\n      const gpa =Object.keys(v).filter(k=>k.startsWith(\"gpa\")&& v[k]).map(k=>v[k]);\n      const sum = gpa.reduce((i, v) => i+v, 0);\n      return Math.round(sum/gpa.length*100)/100;\n  }\n  return (\n\n    <Container component=\"main\" maxWidth=\"md\">\n        <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} sx={{mt:1}}>\n          <Divider textAlign=\"left\">\n            <Typography variant=\"h6\">FIRST YEAR GPA</Typography>\n          </Divider>\n        </Grid>\n          {/* <Grid item md={6} xs={12} /> */}\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              error={Boolean(touched.gpaL11 && errors.gpaL11)}\n              helperText={touched.gpaL11 && errors.gpaL11}\n              label=\"Semester 1\"\n              name=\"gpaL11\"\n              id=\"gpaL11\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.gpaL11}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              error={Boolean(touched.gpaL12 && errors.gpaL12)}\n              helperText={touched.gpaL12 && errors.gpaL12}\n              label=\"Semester 2\"\n              name=\"gpaL12\"\n              id=\"gpaL12\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.gpaL12}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Divider textAlign=\"left\">\n              <Typography variant=\"h6\">SECOND YEAR GPA</Typography>\n            </Divider>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              error={Boolean(touched.gpaL21 && errors.gpaL21)}\n              helperText={touched.gpaL21 && errors.gpaL21}\n              label=\"Semester 1\"\n              name=\"gpaL21\"\n              id=\"gpaL21\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.gpaL21}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              error={Boolean(touched.gpaL22 && errors.gpaL22)}\n              helperText={touched.gpaL22 && errors.gpaL22}\n              label=\"Semester 2\"\n              name=\"gpaL22\"\n              id=\"gpaL22\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.gpaL22}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Divider textAlign=\"left\">\n              <Typography variant=\"h6\">THIRD YEAR GPA</Typography>\n            </Divider>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              error={Boolean(touched.gpaL31 && errors.gpaL31)}\n              helperText={touched.gpaL31 && errors.gpaL31}\n              label=\"Semester 1\"\n              name=\"gpaL31\"\n              id=\"gpaL31\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.gpaL31}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              error={Boolean(touched.gpaL32 && errors.gpaL32)}\n              helperText={touched.gpaL32 && errors.gpaL32}\n              label=\"Semester 2\"\n              name=\"gpaL32\"\n              id=\"gpaL32\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.gpaL32}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <Divider textAlign=\"left\">\n              <Typography variant=\"h6\">OVERALL</Typography>\n            </Divider>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n            disabled\n              fullWidth\n              type=\"number\"\n              error={Boolean(touched.overall && errors.overall)}\n              helperText={touched.overall && errors.overall}\n              label=\"Overall\"\n              name=\"overall\"\n              id=\"overall\"\n              // onBlur={handleBlur}\n              // onChange={handleChange}\n              value={overAllVal(values)}\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      <Divider />\n    </Container>\n  );\n};\nexport default Step1;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\nimport VideoLabelIcon from \"@mui/icons-material/VideoLabel\";\nimport StepConnector, {\n  stepConnectorClasses,\n} from \"@mui/material/StepConnector\";\nimport { Formik } from \"formik\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Step3 from \"./Step3\";\nimport * as Yup from \"yup\";\nimport { phoneRegExp } from \"../../../../config/pattern\";\nimport { Paper } from \"@mui/material\";\n\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n  [`&.${stepConnectorClasses.alternativeLabel}`]: {\n    top: 22,\n  },\n  [`&.${stepConnectorClasses.active}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  [`&.${stepConnectorClasses.completed}`]: {\n    [`& .${stepConnectorClasses.line}`]: {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  [`& .${stepConnectorClasses.line}`]: {\n    height: 3,\n    border: 0,\n    backgroundColor:\n      theme.palette.mode === \"dark\" ? theme.palette.grey[800] : \"#eaeaf0\",\n    borderRadius: 1,\n  },\n}));\n\nconst ColorlibStepIconRoot = styled(\"div\")(({ theme, ownerState }) => ({\n  backgroundColor:\n    theme.palette.mode === \"dark\" ? theme.palette.grey[700] : \"#ccc\",\n  zIndex: 1,\n  color: \"#fff\",\n  width: 50,\n  height: 50,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  ...(ownerState.active && {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n  }),\n  ...(ownerState.completed && {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n  }),\n}));\n\nfunction ColorlibStepIcon(props) {\n  const { active, completed, className } = props;\n\n  const icons = {\n    1: <SettingsIcon />,\n    2: <GroupAddIcon />,\n    3: <VideoLabelIcon />,\n  };\n\n  return (\n    <ColorlibStepIconRoot\n      ownerState={{ completed, active }}\n      className={className}\n    >\n      {icons[String(props.icon)]}\n    </ColorlibStepIconRoot>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   * @default false\n   */\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   * @default false\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\nconst steps = [\n  \"Personal Information\",\n  \"Company Preferences\",\n  \"Current Overall Performance\",\n];\n\nconst Internship = () => {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const switchTab = (tab, data) => {\n    console.log(\"tab1 data-\", data);\n    switch (tab) {\n      case 0:\n        return <Step1 {...data} />;\n      case 1:\n        return <Step2 {...data} />;\n      case 2:\n        return <Step3 {...data} />;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Paper elevation={24} sx={{ px: 1, py: 3 }}>\n        <Typography variant=\"h4\" sx={{ textAlign: \"center\", mb: 5 }}>\n          Internship Application Form\n        </Typography>\n        <Stepper activeStep={activeStep} connector={<ColorlibConnector />}>\n          {steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">Optional</Typography>\n              );\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel StepIconComponent={ColorlibStepIcon}>\n                  <Typography variant=\"h6\" sx={{display:{xs:\"none\",sm:\"block\"}}}>{label}</Typography>\n                </StepLabel>{\" \"}\n              </Step>\n            );\n          })}\n        </Stepper>\n        {activeStep === steps.length ? (\n          <React.Fragment>\n            <Typography sx={{ mt: 2, mb: 1 }} variant=\"h4\">\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n              <Box sx={{ flex: \"1 1 auto\" }} />\n              <Button onClick={handleReset}>Reset</Button>\n            </Box>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <Box sx={{ mb: 1}} />\n            {/* <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography> */}\n            <Formik\n              initialValues={{\n                nameWithInit: \"\",\n                fullName: \"\",\n                gender: \"male\",\n                regNo: \"\",\n                mobile1: \"\",\n                mobile2: \"\",\n                email: \"\",\n                phone: \"\",\n                address: \"\",\n                gName: \"\",\n                gMobile: \"\",\n                gAddress: \"\",\n                company1: \"\",\n                company2: \"\",\n                degree: \"\",\n                gpaL11: 0.0,\n                gpaL12: 0.0,\n                gpaL21: 0.0,\n                gpaL22: 0.0,\n                gpaL31: 0.0,\n                gpaL32: 0.0,\n                overall: 0.0,\n              }}\n              validationSchema={Yup.object().shape({\n                nameWithInit: Yup.string().required(\"Required\"),\n                fullName: Yup.string().required(\"Required\"),\n                gender: Yup.string().required(\"Required\"),\n                regNo: \"\",\n                mobile1: Yup.string()\n                  .matches(phoneRegExp, \"Phone number is not valid\")\n                  .min(9)\n                  .max(10)\n                  .required(\"Phone is required\"),\n                mobile2: Yup.string()\n                  .matches(phoneRegExp, \"Phone number is not valid\")\n                  .min(9)\n                  .max(10)\n                  .required(\"Phone is required\"),\n                email: Yup.string()\n                  .email(\"Must be a valid email\")\n                  .max(255)\n                  .required(\"Email is required\"),\n                address: Yup.string().required(\"Required\"),\n                gName: Yup.string().required(\"Required\"),\n                gMobile: Yup.string()\n                  .matches(phoneRegExp, \"Phone number is not valid\")\n                  .min(9)\n                  .max(10)\n                  .required(\"Phone is required\"),\n                gAddress: Yup.string().required(\"Required\"),\n                company1: Yup.string().required(\"Required\"),\n                company2: Yup.string().required(\"Required\"),\n                company3: Yup.string().required(\"Required\"),\n                degree: Yup.string().required(\"Required\"),\n                gpaL11: Yup.number(\"value must be a number\")\n                  .min(0)\n                  .max(4.0)\n                  .required(\"Required\"),\n                gpaL12: Yup.number(\"value must be a number\")\n                  .min(0)\n                  .max(4.0)\n                  .required(\"Required\"),\n                gpaL21: Yup.number(\"value must be a number\")\n                  .min(0)\n                  .max(4.0)\n                  .required(\"Required\"),\n                gpaL22: Yup.number(\"value must be a number\")\n                  .min(0)\n                  .max(4.0)\n                  .required(\"Required\"),\n                gpaL31: Yup.number(\"value must be a number\")\n                  .min(0)\n                  .max(4.0)\n                  .required(\"Required\"),\n                gpaL32: Yup.number(\"value must be a number\")\n                  .min(0)\n                  .max(4.0)\n                  .required(\"Required\"),\n              })}\n            >\n              {(data) => {\n                console.log(\"data-\" + data);\n                return (\n                  <>\n                    <form onSubmit={data.handleSubmit}>\n                      {switchTab(activeStep, data)}\n                      <Box\n                        sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}\n                      >\n                        <Button\n                          color=\"inherit\"\n                          disabled={activeStep === 0}\n                          onClick={handleBack}\n                          sx={{ mr: 1 }}\n                        >\n                          Back\n                        </Button>\n                        <Box sx={{ flex: \"1 1 auto\" }} />\n\n                        <Button\n                          type=\"submit\"\n                          onClick={() => {\n                            console.log(\"data\", data.isValid);\n                            switch (activeStep) {\n                              case 0:\n                                if (!data.errors.fullName) {\n                                  data.errors = {};\n                                  handleNext();\n                                }\n                                break;\n                              case 1:\n                                if (!data.errors.company1) {\n                                  handleNext();\n                                }\n                                break;\n                              case 2:\n                                if (true) {\n                                  handleNext();\n                                }\n                                break;\n                              default:\n                                break;\n                            }\n                          }}\n                        >\n                          {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                        </Button>\n                      </Box>\n                    </form>\n                  </>\n                );\n              }}\n            </Formik>\n          </React.Fragment>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Internship;\n"],"sourceRoot":""}